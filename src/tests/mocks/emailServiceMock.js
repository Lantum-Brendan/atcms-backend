// Generated by Copilot
class EmailServiceMock {
    constructor() {
        this.sentEmails = [];
    }

    reset() {
        this.sentEmails = [];
    }

    async sendEmail(to, subject, body) {
        this.sentEmails.push({ to, subject, body, sentAt: new Date() });
        return true;
    }

    getEmailCount() {
        return this.sentEmails.length;
    }

    getEmailsSentTo(email) {
        return this.sentEmails.filter(e => e.to === email);
    }

    getLastEmail() {
        return this.sentEmails[this.sentEmails.length - 1] || null;
    }

    async sendTranscriptRequestConfirmation(to, requestDetails) {
        return await this.sendEmail(
            to,
            'Transcript Request Confirmation',
            JSON.stringify(requestDetails)
        );
    }

    async sendTranscriptReadyNotification(to, downloadUrl) {
        return await this.sendEmail(
            to,
            'Your Transcript is Ready',
            `Your transcript is ready for download: ${downloadUrl}`
        );
    }

    async sendPaymentFailureNotification(to, details) {
        return await this.sendEmail(
            to,
            'Transcript Request Payment Failed',
            JSON.stringify(details)
        );
    }

    async sendVerificationEmail(to, verificationUrl) {
        return await this.sendEmail(
            to,
            'Transcript Verification Request',
            `Please verify this transcript: ${verificationUrl}`
        );
    }
}

module.exports = new EmailServiceMock();